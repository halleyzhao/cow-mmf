// use '//' for comments
//
// pipeline graph defined by components list
// the grammar is similar to init a C data structure
// 1. {}, are separater
// 2. no space/tab is allowd before separaters
// 3. 1+ space is required after separaters, except the line ending "},"
//
// {component_index, component_name, mimetype, is_encoder, uplink_component, downlink_compopnent}
// - component_index: unique index of a component.
// - component_name: optional.
// - mimetype: optional. at least one filed is valid for component name and mimetype
// - is_encoder: true for encoder, false for decoder and else
// - uplink_component: index of uplink component.
//      . current component will actively pull data from uplink_component (addSource)
//      . use -1 if current component works in slave mode to uplink component
// - downlink_component: index of downlink component.
//      . current component will actively push data to downlink_component (addSink)
//      . use -1 if current component works in slave mode to downlink component
GRAPH:
// {0, NULL, MEDIA_MIMETYPE_MEDIA_DEMUXER, false, NULL };
{ 1, MediaCodec, video/avc, false, 0, 2},
{ 2, VideoSinkBasic, video/render, false, -1, -1},
//
ATTRIBUTES:
// property for components
// {component_index, property_name, data_type, property_value}
// - component_index: component_index mentioned in GRAPH section
// - property_name: property string
// - data_type: type in INT32/INT64/STRING
// - property_value: property value in string
